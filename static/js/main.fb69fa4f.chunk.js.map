{"version":3,"sources":["pages/home.js","pages/resume.js","pages/projects.js","logo/jw-logo-no-deadname.svg.js","App.js","serviceWorker.js","index.js"],"names":["Home","role","aria-label","href","Resume","style","position","id","title","scrolling","height","width","src","Projects","useState","content","setContent","useEffect","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","Logo","fill","viewBox","y","x","d","socialConfig","fgColor","bgColor","App","className","to","url","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb69fa4f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Home () {\n  return <>\n    <h1>Hello! <span role=\"img\" aria-label=\"hand waving\">ðŸ‘‹</span></h1>\n    <p>\n      I am a research assistant for&nbsp;\n      <a href=\"http://http://cs-people.bu.edu/gaboardi/\">\n        Marco Gaboardi at Boston University\n      </a>. <br/>\n      Interested in programming languages, software verification,\n      data privacy, and web development. <br/>\n      Currently looking for PhD programs in Boston for Fall 2021\n    </p>\n  </>\n}\n","import React from 'react'\n\nexport default function Resume () {\n  return (\n    <div style={{position: 'relative'}}>\n      <div></div>\n      <iframe\n        id=\"resumeFrame\"\n        title=\"resume\"\n        scrolling=\"no\"\n        height=\"1500\"\n        width=\"100%\"\n        src=\"https://docs.google.com/document/d/e/2PACX-1vTtiddhLvBkA_q5pZRSiO5p_o2Zticq37AOZXO5UIUkPyaseiaBPXcLRrQVXpKNuRAdLfid9lbidiYL/pub?embedded=true\"\n      ></iframe>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport marked from 'marked'\nimport './projects.css'\n\nexport default function Projects () {\n  const [content, setContent] = useState('loading...')\n\n  useEffect(() => {\n    fetch('/projects.md')\n      .then(response => response.text())\n      .then(text => setContent(text))\n  })\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: marked(content)\n      }}\n    ></div>\n  )\n}\n","import React from 'react'\n\nexport default function Logo({ fill }) {\n  return (\n    <svg viewBox=\"0 0 508.475 452.978\" style={{width: 'var(--logo-width)'}}>\n      <rect y=\"-281\" x=\"-131.6\" height=\"119\" width=\"607\" fill=\"none\"/>\n      <g style={{ fill: fill || 'var(--logo-fill)' }}>\n        <path d=\"m20.36 404.18c20.75-1.522 37.956-7.088 48.58-19.232 12.148-13.666 17.207-32.894 17.207-91.596v-205.96h44.535v223.17c0 47.57-7.591 78.438-29.354 100.71-19.735 19.732-52.123 27.831-75.907 27.831l-5.063-34.92z\"/>\n        <path d=\"m187.05 87.216l32.837 124.27c6.57 27.3 13.1 52.5 17.7 77.797h1.514c5.556-24.753 13.64-51.023 21.724-77.29l39.909-124.78h37.379l37.887 122.25c9.092 29.3 16.2 55.1 21.7 79.814h1.514c4.041-24.753 10.605-50.516 18.691-79.311l34.857-122.76h43.943l-78.801 244.5h-40.416l-37.379-116.69c-8.592-27.281-15.662-51.526-21.725-80.321h-1.008c-6.062 29.298-13.641 54.558-22.23 80.825l-39.39 116.2h-40.415l-73.76-244.5h45.47z\"/>\n        <rect y=\"12.8\" x=\"85.1\" height=\"44.6\" width=\"44.6\"/>\n      </g>\n      <rect y=\"-134.6\" x=\"531.6\" height=\"23.6\" width=\"355.1\"/>\n    </svg>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { SocialIcon } from 'react-social-icons'\n\nimport Home from './pages/home'\nimport Resume from './pages/resume'\nimport Projects from './pages/projects'\n\nimport Logo from './logo/jw-logo-no-deadname.svg.js';\nimport './App.css';\n\n\nconst socialConfig = {\n  style: { height: 25, width: 25 },\n  fgColor: 'white',\n  bgColor: 'rgb(70, 70, 70)'\n}\n\nfunction App () {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"logo\">\n          <Link to=\"/\">\n            <Logo/>\n          </Link>\n        </div>\n        <div className=\"nav\">\n          <div className=\"links\">\n            <Link to=\"/\">HOME</Link>\n            {/* <Link to=\"/blog/\">BLOG</Link> */}\n            <Link to=\"/projects/\">PROJECTS</Link>\n            <Link to=\"/resume/\">RESUME</Link>\n          </div>\n          <div className=\"socials\">\n            <SocialIcon url=\"http://github.com/junewunder\" {...socialConfig}/>\n            <SocialIcon url=\"https://www.linkedin.com/in/june-wunder/\" {...socialConfig} />\n            <SocialIcon url=\"https://twitter.com/wowjunewunder\" {...socialConfig} />\n          </div>\n        </div>\n        <div className=\"content\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/blog/\" exact component={Home} />\n          <Route path=\"/projects/\" exact component={Projects} />\n          <Route path=\"/resume/\" exact component={Resume} />\n        </div>\n      </div>\n      <canvas id=\"koi-canvas\" />\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}